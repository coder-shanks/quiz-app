{"version":3,"sources":["Question.js","Option.js","Options.js","QuizBox.js","index.js"],"names":["Question","props","className","que","children","Option","onClick","e","correctAnswer","document","activeElement","classList","add","option","checkCorrectAnswer","selectedIndex","correctIndex","Options","this","choices","length","correctChoice","React","Component","question","answers","QuizBox","state","answerData","errorData","axios","get","then","successData","data","results","map","loadedQuestion","incorrect_answers","randomIndex","Math","floor","random","splice","correct_answer","setState","toString","console","log","unescape","App","ReactDOM","render","getElementById"],"mappings":"2NAWeA,EATE,SAACC,GAChB,OACE,gCACE,qBAAKC,UAAU,YAAf,SAA4BD,EAAME,MACjCF,EAAMG,aCWEC,EAfA,SAACJ,GAQd,OACE,wBAAQC,UAAU,wBAAwBI,QAP1B,SAACC,GACW,SAAxBN,EAAMO,eACRC,SAASC,cAAcC,UAAUC,IAAI,UAKvC,SACE,qBAAKV,UAAU,OAAf,SAAuBD,EAAMY,YCR/BC,EAAqB,SAACC,EAAeC,GACvC,OAAOD,IAAkBC,EAAe,OAAS,SAkCpCC,E,uKA7BX,OAAIC,KAAKjB,MAAMkB,QAAQC,OAAS,EAE5B,sBAAKlB,UAAU,WAAf,UACE,cAAC,EAAD,CACEW,OAAQK,KAAKjB,MAAMkB,QAAQ,GAC3BX,cAAeM,EAAmB,EAAGI,KAAKjB,MAAMoB,iBAElD,qBAAKnB,UAAU,sBACf,cAAC,EAAD,CACEW,OAAQK,KAAKjB,MAAMkB,QAAQ,GAC3BX,cAAeM,EAAmB,EAAGI,KAAKjB,MAAMoB,iBAElD,qBAAKnB,UAAU,sBACf,cAAC,EAAD,CACEW,OAAQK,KAAKjB,MAAMkB,QAAQ,GAC3BX,cAAeM,EAAmB,EAAGI,KAAKjB,MAAMoB,iBAElD,qBAAKnB,UAAU,sBACf,cAAC,EAAD,CACEW,OAAQK,KAAKjB,MAAMkB,QAAQ,GAC3BX,cAAeM,EAAmB,EAAGI,KAAKjB,MAAMoB,oBAKjD,qBAAKnB,UAAU,gC,GA3BJoB,IAAMC,WCDxBC,EAAW,GACXC,EAAU,GACVT,EAAe,EAqDJU,E,kDAlDb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IAED0B,MAAQ,CACXH,SAAU,GACVI,WAAY,GACZpB,cAAe,GACfqB,UAAW,IAGbC,IACGC,IAAI,kEACJC,MACC,SAACC,GACCT,EAAWS,EAAYC,KAAKC,QAAQC,KAAI,SAACC,GACvCZ,EAAO,YAAOY,EAAeC,mBAC7B,IAAIC,EAAcC,KAAKC,MAAsB,EAAhBD,KAAKE,UAOlC,OANA1B,EAAeuB,EACfd,EAAQkB,OAAOJ,EAAa,EAAGF,EAAeO,gBAC9C,EAAKC,SAAS,CACZjB,WAAYH,EACZjB,cAAe6B,EAAeO,iBAEzBP,EAAeb,YAGxB,EAAKqB,SAAS,CAAErB,SAAUA,EAASsB,gBAErC,SAACjB,GACCkB,QAAQC,IAAInB,GACZ,EAAKgB,SAAS,CAAEhB,UAAWA,OA9BhB,E,qDAoCjB,MAA4B,KAAxBX,KAAKS,MAAMH,SAEX,cAAC,EAAD,CAAUrB,IAAK8C,mBAAS/B,KAAKS,MAAMH,UAAnC,SACE,cAAC,EAAD,CACEL,QAASD,KAAKS,MAAMC,WACpBP,cAAeL,MAKhB,qBAAKd,UAAU,yC,GA/CJoB,IAAMC,WCNtB2B,EAAM,WACV,OACE,qBAAKhD,UAAU,eAAf,SACE,qBAAKA,UAAU,+CAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,YAOViD,IAASC,OAAO,cAAC,EAAD,IAAS3C,SAAS4C,eAAe,W","file":"static/js/main.8c61ae35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"ui header\">{props.que}</div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\n\r\nconst Option = (props) => {\r\n  //Change the button color to green if answer is correct\r\n  let checkAnswer = (e) => {\r\n    if (props.correctAnswer === 'true') {\r\n      document.activeElement.classList.add('green');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button className=\"fluid ui button large\" onClick={checkAnswer}>\r\n      <div className=\"item\">{props.option}</div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Option;\r\n","import React from 'react';\r\n\r\nimport Option from './Option';\r\n\r\nlet checkCorrectAnswer = (selectedIndex, correctIndex) => {\r\n  return selectedIndex === correctIndex ? 'true' : 'false';\r\n};\r\n\r\nclass Options extends React.Component {\r\n  render() {\r\n    if (this.props.choices.length > 0) {\r\n      return (\r\n        <div className=\"ui items\">\r\n          <Option\r\n            option={this.props.choices[0]}\r\n            correctAnswer={checkCorrectAnswer(0, this.props.correctChoice)}\r\n          />\r\n          <div className=\"ui hidden divider\"></div>\r\n          <Option\r\n            option={this.props.choices[1]}\r\n            correctAnswer={checkCorrectAnswer(1, this.props.correctChoice)}\r\n          />\r\n          <div className=\"ui hidden divider\"></div>\r\n          <Option\r\n            option={this.props.choices[2]}\r\n            correctAnswer={checkCorrectAnswer(2, this.props.correctChoice)}\r\n          />\r\n          <div className=\"ui hidden divider\"></div>\r\n          <Option\r\n            option={this.props.choices[3]}\r\n            correctAnswer={checkCorrectAnswer(3, this.props.correctChoice)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"ui active inline loader\"></div>;\r\n  }\r\n}\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { unescape } from 'lodash';\r\n\r\nimport Question from './Question';\r\nimport Options from './Options';\r\n\r\nlet question = '';\r\nlet answers = [];\r\nlet correctIndex = 0;\r\n\r\nclass QuizBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      question: '',\r\n      answerData: [],\r\n      correctAnswer: '',\r\n      errorData: {},\r\n    };\r\n\r\n    axios\r\n      .get('https://opentdb.com/api.php?amount=1&category=18&type=multiple')\r\n      .then(\r\n        (successData) => {\r\n          question = successData.data.results.map((loadedQuestion) => {\r\n            answers = [...loadedQuestion.incorrect_answers];\r\n            let randomIndex = Math.floor(Math.random() * 3);\r\n            correctIndex = randomIndex;\r\n            answers.splice(randomIndex, 0, loadedQuestion.correct_answer);\r\n            this.setState({\r\n              answerData: answers,\r\n              correctAnswer: loadedQuestion.correct_answer,\r\n            });\r\n            return loadedQuestion.question;\r\n          });\r\n\r\n          this.setState({ question: question.toString() });\r\n        },\r\n        (errorData) => {\r\n          console.log(errorData);\r\n          this.setState({ errorData: errorData });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.question !== '') {\r\n      return (\r\n        <Question que={unescape(this.state.question)}>\r\n          <Options\r\n            choices={this.state.answerData}\r\n            correctChoice={correctIndex}\r\n          />\r\n        </Question>\r\n      );\r\n    }\r\n    return <div className=\"ui active centered inline loader\"></div>;\r\n  }\r\n}\r\n\r\nexport default QuizBox;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport QuizBox from './QuizBox';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui raised container very padded text segment\">\r\n        <div className=\"ui container\">\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}