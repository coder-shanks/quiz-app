{"version":3,"sources":["Question.js","Option.js","Options.js","QuizBox.js","index.js"],"names":["Question","props","className","unescape","que","children","Option","checkAnswer","correctAnswer","document","activeElement","classList","add","parentElement","querySelectorAll","forEach","btn","contains","disabled","onClick","this","option","React","Component","checkCorrectAnswer","selectedIndex","correctIndex","Options","choices","length","correctChoice","question","answers","QuizBox","state","answerData","errorData","axios","get","then","successData","data","results","map","loadedQuestion","incorrect_answers","randomIndex","Math","floor","random","splice","correct_answer","setState","toString","console","log","App","ReactDOM","render","getElementById"],"mappings":"0NAYeA,EATE,SAACC,GAChB,OACE,gCACE,qBAAKC,UAAU,YAAf,SAA4BC,YAASF,EAAMG,OAC1CH,EAAMI,aCsBEC,E,4MAxBbC,YAAc,WACqB,SAA7B,EAAKN,MAAMO,cACbC,SAASC,cAAcC,UAAUC,IAAI,SAErCH,SAASC,cAAcC,UAAUC,IAAI,OAGvCH,SAASC,cAAcG,cACpBC,iBAAiB,UACjBC,SAAQ,SAACC,GACFA,EAAIL,UAAUM,SAAS,UAAYD,EAAIL,UAAUM,SAAS,SAC9DD,EAAIE,UAAW,O,uDAKrB,OACE,wBAAQhB,UAAU,wBAAwBiB,QAASC,KAAKb,YAAxD,SACE,qBAAKL,UAAU,OAAf,SAAuBC,YAASiB,KAAKnB,MAAMoB,gB,GApB9BC,IAAMC,WCCvBC,EAAqB,SAACC,EAAeC,GACvC,OAAOD,IAAkBC,EAAe,OAAS,SAkCpCC,E,uKA7BX,OAAIP,KAAKnB,MAAM2B,QAAQC,OAAS,EAE5B,sBAAK3B,UAAU,WAAf,UACE,cAAC,EAAD,CACEmB,OAAQD,KAAKnB,MAAM2B,QAAQ,GAC3BpB,cAAegB,EAAmB,EAAGJ,KAAKnB,MAAM6B,iBAElD,qBAAK5B,UAAU,sBACf,cAAC,EAAD,CACEmB,OAAQD,KAAKnB,MAAM2B,QAAQ,GAC3BpB,cAAegB,EAAmB,EAAGJ,KAAKnB,MAAM6B,iBAElD,qBAAK5B,UAAU,sBACf,cAAC,EAAD,CACEmB,OAAQD,KAAKnB,MAAM2B,QAAQ,GAC3BpB,cAAegB,EAAmB,EAAGJ,KAAKnB,MAAM6B,iBAElD,qBAAK5B,UAAU,sBACf,cAAC,EAAD,CACEmB,OAAQD,KAAKnB,MAAM2B,QAAQ,GAC3BpB,cAAegB,EAAmB,EAAGJ,KAAKnB,MAAM6B,oBAKjD,qBAAK5B,UAAU,gC,GA3BJoB,IAAMC,WCFxBQ,EAAW,GACXC,EAAU,GACVN,EAAe,EAqDJO,E,kDAhDb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IAEDiC,MAAQ,CACXH,SAAU,GACVI,WAAY,GACZ3B,cAAe,GACf4B,UAAW,IAGbC,IAAMC,IAbM,sDAaOC,MACjB,SAACC,GACCT,EAAWS,EAAYC,KAAKC,QAAQC,KAAI,SAACC,GACvCZ,EAAO,YAAOY,EAAeC,mBAC7B,IAAIC,EAAcC,KAAKC,MAAsB,EAAhBD,KAAKE,UAOlC,OANAvB,EAAeoB,EACfd,EAAQkB,OAAOJ,EAAa,EAAGF,EAAeO,gBAC9C,EAAKC,SAAS,CACZjB,WAAYH,EACZxB,cAAeoC,EAAeO,iBAEzBP,EAAeb,YAGxB,EAAKqB,SAAS,CAAErB,SAAUA,EAASsB,gBAErC,SAACjB,GACCkB,QAAQC,IAAInB,GACZ,EAAKgB,SAAS,CAAEhB,UAAWA,OA5Bd,E,qDAkCjB,MAA4B,KAAxBhB,KAAKc,MAAMH,SAEX,cAAC,EAAD,CAAU3B,IAAKgB,KAAKc,MAAMH,SAA1B,SACE,cAAC,EAAD,CACEH,QAASR,KAAKc,MAAMC,WACpBL,cAAeJ,MAKhB,qBAAKxB,UAAU,yC,GA7CJoB,IAAMC,WCPtBiC,EAAM,WACV,OACE,qBAAKtD,UAAU,eAAf,SACE,qBAAKA,UAAU,+CAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,IACA,qBAAKA,UAAU,eACf,cAAC,EAAD,YAOVuD,IAASC,OAAO,cAAC,EAAD,IAASjD,SAASkD,eAAe,W","file":"static/js/main.440a805f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { unescape } from 'html-escaper';\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"ui header\">{unescape(props.que)}</div>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from 'react';\r\nimport { unescape } from 'html-escaper';\r\n\r\nclass Option extends React.Component {\r\n  //Change the button color to green if answer is correct\r\n  checkAnswer = () => {\r\n    if (this.props.correctAnswer === 'true') {\r\n      document.activeElement.classList.add('green');\r\n    } else {\r\n      document.activeElement.classList.add('red');\r\n    }\r\n\r\n    document.activeElement.parentElement\r\n      .querySelectorAll('button')\r\n      .forEach((btn) => {\r\n        if (!(btn.classList.contains('green') || btn.classList.contains('red')))\r\n          btn.disabled = true;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"fluid ui button large\" onClick={this.checkAnswer}>\r\n        <div className=\"item\">{unescape(this.props.option)}</div>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Option;\r\n","import React from 'react';\r\n\r\nimport Option from './Option';\r\n\r\nlet checkCorrectAnswer = (selectedIndex, correctIndex) => {\r\n  return selectedIndex === correctIndex ? 'true' : 'false';\r\n};\r\n\r\nclass Options extends React.Component {\r\n  render() {\r\n    if (this.props.choices.length > 0) {\r\n      return (\r\n        <div className=\"ui items\">\r\n          <Option\r\n            option={this.props.choices[0]}\r\n            correctAnswer={checkCorrectAnswer(0, this.props.correctChoice)}\r\n          />\r\n          <div className=\"ui hidden divider\"></div>\r\n          <Option\r\n            option={this.props.choices[1]}\r\n            correctAnswer={checkCorrectAnswer(1, this.props.correctChoice)}\r\n          />\r\n          <div className=\"ui hidden divider\"></div>\r\n          <Option\r\n            option={this.props.choices[2]}\r\n            correctAnswer={checkCorrectAnswer(2, this.props.correctChoice)}\r\n          />\r\n          <div className=\"ui hidden divider\"></div>\r\n          <Option\r\n            option={this.props.choices[3]}\r\n            correctAnswer={checkCorrectAnswer(3, this.props.correctChoice)}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"ui active inline loader\"></div>;\r\n  }\r\n}\r\n\r\nexport default Options;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Question from './Question';\r\nimport Options from './Options';\r\n\r\nlet question = '';\r\nlet answers = [];\r\nlet correctIndex = 0;\r\n\r\nconst API_URL = 'https://opentdb.com/api.php?amount=1&type=multiple';\r\n\r\nclass QuizBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      question: '',\r\n      answerData: [],\r\n      correctAnswer: '',\r\n      errorData: {},\r\n    };\r\n\r\n    axios.get(API_URL).then(\r\n      (successData) => {\r\n        question = successData.data.results.map((loadedQuestion) => {\r\n          answers = [...loadedQuestion.incorrect_answers];\r\n          let randomIndex = Math.floor(Math.random() * 3);\r\n          correctIndex = randomIndex;\r\n          answers.splice(randomIndex, 0, loadedQuestion.correct_answer);\r\n          this.setState({\r\n            answerData: answers,\r\n            correctAnswer: loadedQuestion.correct_answer,\r\n          });\r\n          return loadedQuestion.question;\r\n        });\r\n\r\n        this.setState({ question: question.toString() });\r\n      },\r\n      (errorData) => {\r\n        console.log(errorData);\r\n        this.setState({ errorData: errorData });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.question !== '') {\r\n      return (\r\n        <Question que={this.state.question}>\r\n          <Options\r\n            choices={this.state.answerData}\r\n            correctChoice={correctIndex}\r\n          />\r\n        </Question>\r\n      );\r\n    }\r\n    return <div className=\"ui active centered inline loader\"></div>;\r\n  }\r\n}\r\n\r\nexport default QuizBox;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport QuizBox from './QuizBox';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui raised container very padded text segment\">\r\n        <div className=\"ui container\">\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n          <div className=\"ui divider\"></div>\r\n          <QuizBox />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}